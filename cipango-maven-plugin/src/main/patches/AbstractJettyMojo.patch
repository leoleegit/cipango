diff --git a/jetty-maven-plugin/src/main/java/org/mortbay/jetty/plugin/AbstractJettyMojo.java b/jetty-maven-plugin/src/main/java/org/mortbay/jetty/plugin/AbstractJettyMojo.java
index 2ef31ff..87208c7 100644
--- org/mortbay/jetty/plugin/AbstractJettyMojo.java
+++ org/mortbay/jetty/plugin/AbstractJettyMojo.java
@@ -46,6 +46,8 @@ import org.eclipse.jetty.server.handler.HandlerCollection;
 import org.eclipse.jetty.util.Scanner;
 import org.eclipse.jetty.util.resource.Resource;
 import org.eclipse.jetty.xml.XmlConfiguration;
+import org.cipango.plugin.CipangoServer;
+import org.cipango.plugin.CipangoSipAppContext;
 
 
 
@@ -133,7 +135,7 @@ public abstract class AbstractJettyMojo extends AbstractMojo
      * 
      * @parameter alias="webAppConfig"
      */
-    protected JettyWebAppContext webApp;
+    protected CipangoSipAppContext webApp;
 
 
 
@@ -305,7 +307,7 @@ public abstract class AbstractJettyMojo extends AbstractMojo
     /**
      * A wrapper for the Server object
      */
-    protected JettyServer server;
+    protected CipangoServer server;
     
     /**
      * A scanner to check for changes to the webapp
@@ -459,7 +461,7 @@ public abstract class AbstractJettyMojo extends AbstractMojo
             getLog().debug("Starting Jetty Server ...");
 
             printSystemProperties();
-            this.server = new JettyServer();
+            this.server = new CipangoServer();
             setServer(this.server);
 
             //apply any config from a jetty.xml file first which is able to
@@ -557,7 +559,7 @@ public abstract class AbstractJettyMojo extends AbstractMojo
     {
         //As of jetty-7, you must use a <webAppConfig> element
         if (webApp == null)
-            webApp = new JettyWebAppContext();
+            webApp = new CipangoSipAppContext();
         
         //Apply any context xml file to set up the webapp
         //CAUTION: if you've defined a <webAppConfig> element then the
@@ -809,12 +811,12 @@ public abstract class AbstractJettyMojo extends AbstractMojo
     }
 
 
-    public JettyServer getServer ()
+    public CipangoServer getServer ()
     {
         return this.server;
     }
 
-    public void setServer (JettyServer server)
+    public void setServer (CipangoServer server)
     {
         this.server = server;
     }
@@ -841,12 +843,12 @@ public abstract class AbstractJettyMojo extends AbstractMojo
         return this.scannerListeners;
     }
 
-    public JettyWebAppContext getWebAppConfig()
+    public CipangoSipAppContext getWebAppConfig()
     {
         return webApp;
     }
 
-    public void setWebAppConfig(JettyWebAppContext webAppConfig)
+    public void setWebAppConfig(CipangoSipAppContext webAppConfig)
     {
         this.webApp = webAppConfig;
     }
